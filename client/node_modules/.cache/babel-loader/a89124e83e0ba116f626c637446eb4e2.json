{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Ejercicios React\\\\MERN App\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token); // console.log(user)\n\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate('/login', {\n          replace: true\n        });\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        setValue: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"HvnYqkMNRZSvNnakd+olfDafcAA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/benny/Desktop/Ejercicios React/MERN App/client/src/pages/Dashboard.js"],"names":["React","useEffect","useState","jwt","useNavigate","Dashboard","navigate","quote","setQuote","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","replace","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAI;AAAA;;AAClB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeS,aAAf,GAA8B;AAC1B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AACtDC,MAAAA,OAAO,EAAC;AACJ,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADd;AAD8C,KAAnC,CAAvB;AAKA,UAAMC,IAAI,GAAGL,GAAG,CAACM,IAAJ,EAAb;;AACA,QAAGD,IAAI,CAACE,MAAL,KAAe,IAAlB,EAAuB;AACnBX,MAAAA,QAAQ,CAACS,IAAI,CAACV,KAAN,CAAR;AACH,KAFD,MAEK;AACDa,MAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACH;AACJ;;AACDpB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMqB,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGM,KAAH,EAAS;AACL,YAAMC,IAAI,GAAGpB,GAAG,CAACqB,MAAJ,CAAWF,KAAX,CAAb,CADK,CAEL;;AACA,UAAG,CAACC,IAAJ,EAAS;AACLR,QAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACAnB,QAAAA,QAAQ,CAAC,QAAD,EAAW;AAACoB,UAAAA,OAAO,EAAC;AAAT,SAAX,CAAR;AACH,OAHD,MAII;AACAf,QAAAA,aAAa;AAChB;AACJ;AACJ,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACI;AAAA,4BACI;AAAA,iCAAiBJ,KAAK,IAAI,gBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAEE,SAA9C;AAAyD,QAAA,QAAQ,EAAEkB,CAAC,IAAIjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAApF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1CD;;GAAMxB,S;UACeD,W;;;KADfC,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\nconst Dashboard = ()=>{\r\n    const navigate = useNavigate();\r\n    const [quote, setQuote] = useState('');\r\n    const [tempQuote, setTempQuote] = useState('');\r\n    \r\n    async function populateQuote(){\r\n        const req = await fetch('http://localhost:1337/api/quote',{\r\n            headers:{\r\n                'x-access-token': localStorage.getItem('token'),\r\n            },\r\n        })\r\n        const data = req.json()\r\n        if(data.status ==='ok'){\r\n            setQuote(data.quote)\r\n        }else{\r\n            alert(data.error)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        const token = localStorage.getItem('token')\r\n        if(token){\r\n            const user = jwt.decode(token)\r\n            // console.log(user)\r\n            if(!user){\r\n                localStorage.removeItem('token')\r\n                navigate('/login', {replace:true})\r\n            }\r\n            else{\r\n                populateQuote()\r\n            }\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h1>Your quote: {quote || 'No quote found'}</h1>\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Quote\" value={tempQuote} setValue={e => setTempQuote(e.target.value)}/>\r\n                <input type=\"submit\" value=\"Update quote\"/>\r\n            </form>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}