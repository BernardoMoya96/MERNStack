{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Ejercicios React\\\\MERN App\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const onClick = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n\n  async function registerUser(event) {\n    const response = await fetch('http://localhost:1337/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      navigate('/login');\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    //  <div>\n    //    <h1>Register</h1>\n    //    <form onSubmit={registerUser}>\n    //      <input \n    //         value={name}\n    //         onChange= {(e)=> setName(e.target.value)}\n    //         type=\"text\"\n    //         placeholder=\"Name\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={email}\n    //         onChange= {(e)=> setEmail(e.target.value)}\n    //         type=\"email\"\n    //         placeholder=\"Email\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={password}\n    //         onChange= {(e)=> setPassword(e.target.value)}\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //      />\n    //    <br/>\n    //    <input type=\"submit\" value=\"Register\"/>\n    //    </form>     \n    //  </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: registerUser,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Name\",\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: 'Please input your name!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: 'Please input your email!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              loading: loading,\n              onClick: onClick,\n              htmlType: \"submit\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Register, \"MvLnkmzB+BUwkFFCgCgS5LrV1FY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/benny/Desktop/Ejercicios React/MERN App/client/src/pages/Register.js"],"names":["useState","useNavigate","Form","Input","Button","Register","navigate","name","setName","email","setEmail","password","setPassword","loading","setLoading","onClick","setTimeout","registerUser","event","response","fetch","method","headers","body","JSON","stringify","data","json","status","span","remember","required","message","e","target","value","offset"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Login.css';\n\nfunction Register() {\n  const navigate = useNavigate();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [loading, setLoading] = useState(false);\n  \n  const onClick = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n        setLoading(false);\n    }, 2000);\n};\n\n  async function registerUser(event) {    \n    const response = await fetch('http://localhost:1337/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n    const data = await response.json()\n    if (data.status === 'ok') {\n      navigate('/login')\n    }\n\n  }\n\n  return (\n    //  <div>\n    //    <h1>Register</h1>\n    //    <form onSubmit={registerUser}>\n    //      <input \n    //         value={name}\n    //         onChange= {(e)=> setName(e.target.value)}\n    //         type=\"text\"\n    //         placeholder=\"Name\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={email}\n    //         onChange= {(e)=> setEmail(e.target.value)}\n    //         type=\"email\"\n    //         placeholder=\"Email\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={password}\n    //         onChange= {(e)=> setPassword(e.target.value)}\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //      />\n    //    <br/>\n    //    <input type=\"submit\" value=\"Register\"/>\n    //    </form>     \n    //  </div>\n    <div>\n      <h1>Please register</h1>\n      <div className=\"form\">\n        <Form\n          name=\"basic\"\n          labelCol={{\n            span: 8,\n          }}\n          wrapperCol={{\n            span: 16,\n          }}\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={registerUser}\n          autoComplete=\"off\"\n        >\n          <Form.Item\n            label=\"Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your name!',\n              },\n            ]}\n          >\n            <Input onChange={(e) => setName(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your email!',\n              },\n            ]}\n          >\n            <Input onChange={(e) => setEmail(e.target.value)} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input.Password onChange={(e) => setPassword(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            wrapperCol={{\n              offset: 8,\n              span: 16,\n            }}\n          >\n            <Button type=\"primary\" loading={loading} onClick={onClick} htmlType=\"submit\">\n              Login\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}