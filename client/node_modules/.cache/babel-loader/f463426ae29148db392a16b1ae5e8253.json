{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benny\\\\Desktop\\\\Ejercicios React\\\\MERN App\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  async function registerUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n\n    if (data.status === 'ok') {\n      navigate('/login');\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    //  <div>\n    //    <h1>Register</h1>\n    //    <form onSubmit={registerUser}>\n    //      <input \n    //         value={name}\n    //         onChange= {(e)=> setName(e.target.value)}\n    //         type=\"text\"\n    //         placeholder=\"Name\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={email}\n    //         onChange= {(e)=> setEmail(e.target.value)}\n    //         type=\"email\"\n    //         placeholder=\"Email\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={password}\n    //         onChange= {(e)=> setPassword(e.target.value)}\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //      />\n    //    <br/>\n    //    <input type=\"submit\" value=\"Register\"/>\n    //    </form>     \n    //  </div>\n    _jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: loginUser,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Name\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: 'Please input your name!'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          loading: loading,\n          onClick: onClick,\n          htmlType: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Register, \"nZfd5Lf1H8m3qFcrl1W9PTmpE20=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/benny/Desktop/Ejercicios React/MERN App/client/src/pages/Register.js"],"names":["useState","useNavigate","Register","navigate","name","setName","email","setEmail","password","setPassword","registerUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","span","remember","loginUser","required","message","e","target","value","offset","loading","onClick"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction Register() {\n  const navigate = useNavigate();\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  async function registerUser(event) {\n    event.preventDefault()\n    const response = await fetch('http://localhost:1337/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n    const data = await response.json()\n    if (data.status === 'ok') {\n      navigate('/login')\n    }\n\n  }\n\n  return (\n    //  <div>\n    //    <h1>Register</h1>\n    //    <form onSubmit={registerUser}>\n    //      <input \n    //         value={name}\n    //         onChange= {(e)=> setName(e.target.value)}\n    //         type=\"text\"\n    //         placeholder=\"Name\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={email}\n    //         onChange= {(e)=> setEmail(e.target.value)}\n    //         type=\"email\"\n    //         placeholder=\"Email\"\n    //      />\n    //      <br/>\n    //       <input \n    //         value={password}\n    //         onChange= {(e)=> setPassword(e.target.value)}\n    //         type=\"password\"\n    //         placeholder=\"Password\"\n    //      />\n    //    <br/>\n    //    <input type=\"submit\" value=\"Register\"/>\n    //    </form>     \n    //  </div>\n    <Form\n      name=\"basic\"\n      labelCol={{\n        span: 8,\n      }}\n      wrapperCol={{\n        span: 16,\n      }}\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={loginUser}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name!',\n          },\n        ]}\n      >\n      </Form.Item>\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your email!',\n          },\n        ]}\n      >\n        <Input onChange={(e) => setEmail(e.target.value)} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n      >\n        <Input.Password onChange={(e) => setPassword(e.target.value)} />\n      </Form.Item>\n      <Form.Item\n        wrapperCol={{\n          offset: 8,\n          span: 16,\n        }}\n      >\n        <Button type=\"primary\" loading={loading} onClick={onClick} htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}